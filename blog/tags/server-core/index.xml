<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>server-core on Chris McKee</title><link>https://chrismckee.co.uk/blog/tags/server-core/</link><description>Recent content in server-core on Chris McKee</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 01 Jan 2024 18:00:00 +0000</lastBuildDate><atom:link href="https://chrismckee.co.uk/blog/tags/server-core/index.xml" rel="self" type="application/rss+xml"/><item><title>Piping Windows EventLog to OpInsight (or other tcp endpoint)</title><link>https://chrismckee.co.uk/blog/posts/piping-eventlog-to-opinsight/</link><pubDate>Mon, 01 Jan 2024 18:00:00 +0000</pubDate><guid>https://chrismckee.co.uk/blog/posts/piping-eventlog-to-opinsight/</guid><description>Quick and Dirty
Pipes the last 10 events from the kube-proxy source to OpInsight (or other tcp endpoint) in json format using Powershell.
1Get-EventLog -Source &amp;#39;kube-proxy&amp;#39; -LogName &amp;#39;EKS&amp;#39; -Newest 10 | ForEach-Object { 2 $Endpoint = https://eu.webhook.logs.insight.rapid7.com/v1/noformat/&amp;lt;YourToken&amp;gt;&amp;#34; 3 4 $JsonBody = @{ 5 &amp;#34;idx&amp;#34; = $_.Index, 6 &amp;#34;src&amp;#34; = $_.Source 7 &amp;#34;inst&amp;#34; = $_.InstanceId 8 &amp;#34;time&amp;#34; = $_.Time, 9 &amp;#34;event&amp;#34; = $_.Message, 10 } | ConvertTo-Json 11 12 Invoke-RestMethod -Method Post -Uri $Endpoint -Body $JsonBody -ContentType &amp;#34;application/json&amp;#34; 13} You can of course use a function but this is something I only tend to have to use if EKS&amp;rsquo; managed windows nodes are misbehaving and I want to quickly pipe the logs to OpInsight for analysis.</description></item><item><title>Converting Windows Server Core to Desktop for Debugging</title><link>https://chrismckee.co.uk/blog/posts/convert-windows-server-to-desktop-for-debugging/</link><pubDate>Tue, 07 Mar 2023 18:00:00 +0000</pubDate><guid>https://chrismckee.co.uk/blog/posts/convert-windows-server-to-desktop-for-debugging/</guid><description>Sometimes it&amp;rsquo;s necessary when debugging a machines issues to pop desktop support back on so you can RDP to the machine and quickly use tools that work properly rather than the half-arsed versions available via powershell where basic things like log viewing (get-events) requires you to faff and filter the log request down just so you can pipe it into another chunk of powershell to get the full log row as god forbid they learn how line wrap works or let you scroll like any linux shell / journalctl would.</description></item><item><title>Resetting Windows Server User Passwords</title><link>https://chrismckee.co.uk/blog/posts/reset-user-account-password-from-powershell/</link><pubDate>Tue, 07 Mar 2023 18:00:00 +0000</pubDate><guid>https://chrismckee.co.uk/blog/posts/reset-user-account-password-from-powershell/</guid><description>Quick and simple
This is also useful for AWS when you have SSM setup but the servers created without a key; as it allows you to set the password via ssm then RDP normally.
Remote to the machine / open powershell as admin Check current user Get-LocalUser Create new password you&amp;rsquo;ll use, as a secure-string $Password = Read-Host &amp;quot;Enter the new password&amp;quot; -AsSecureString Set the password of the user. (in this case admin) 1$UserAccount = Get-LocalUser -Name &amp;#34;administrator&amp;#34; 2$UserAccount | Set-LocalUser -Password $Password Done</description></item></channel></rss>